
/**
 * File generated by Atek tsgen
 * env=host
 * DO NOT MODIFY
 */
import { URL } from 'url';
import { ApiBrokerClient } from '@atek-cloud/api-broker';

export const ID = "atek.cloud/adb-ctrl-api";
export const REVISION = undefined;

export default class AdbCtrlApiClient extends ApiBrokerClient {
  constructor() {
    super("atek.cloud/adb-ctrl-api")
  }

  init(config: AdbProcessConfig): Promise<void> {
    return this.$rpc("init", [config])
  }

  getConfig(): Promise<AdbProcessConfig> {
    return this.$rpc("getConfig", [])
  }

  createDb(opts: DbSettings): Promise<DbInfo> {
    return this.$rpc("createDb", [opts])
  }

  getOrCreateDb(alias: string, opts: DbSettings): Promise<DbInfo> {
    return this.$rpc("getOrCreateDb", [alias, opts])
  }

  configureDb(dbId: string, config: DbSettings): Promise<void> {
    return this.$rpc("configureDb", [dbId, config])
  }

  getDbConfig(dbId: string): Promise<DbSettings> {
    return this.$rpc("getDbConfig", [dbId])
  }

  listDbs(): Promise<DbSettings[]> {
    return this.$rpc("listDbs", [])
  }
}

export interface AdbProcessConfig {
  serverDbId: string;
}

export interface DbInfo {
  dbId: string;
}

export interface DbSettings {
  type?: DbInternalType;
  alias?: string;
  displayName?: string;
  tables?: string[];
  network?: NetworkSettings;
  persist?: boolean;
  presync?: boolean;
}

export interface NetworkSettings {
  access?: string;
}

export enum DbInternalType {
  HYPERBEE = 'hyperbee'
}
